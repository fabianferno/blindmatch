/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    BlindMatch: {
      address: "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      abi: [
        {
          inputs: [
            {
              internalType: "uint8",
              name: "got",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "expected",
              type: "uint8",
            },
          ],
          name: "InvalidEncryptedInput",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "int32",
              name: "value",
              type: "int32",
            },
          ],
          name: "SecurityZoneOutOfBounds",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "isMatch",
              type: "bool",
            },
          ],
          name: "MatchDecrypted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "MatchDecryptionRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user1",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user2",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
          ],
          name: "MatchFound",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "requester",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "target",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "MatchRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
          ],
          name: "ProfileCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "uint8",
              name: "score",
              type: "uint8",
            },
          ],
          name: "ScoreDecrypted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "ScoreDecryptionRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user1",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user2",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "SimilarityCalculated",
          type: "event",
        },
        {
          inputs: [],
          name: "MATCH_THRESHOLD",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MIN_INTERESTS",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "TOTAL_INTERESTS",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "allUsers",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "targets",
              type: "address[]",
            },
          ],
          name: "batchCalculateSimilarity",
          outputs: [
            {
              internalType: "bytes32[]",
              name: "requestIds",
              type: "bytes32[]",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "targetUser",
              type: "address",
            },
          ],
          name: "calculateSimilarity",
          outputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "deleteProfile",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllUsers",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "getMatchCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "getMatchRequest",
          outputs: [
            {
              internalType: "address",
              name: "requester",
              type: "address",
            },
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
            {
              internalType: "bool",
              name: "processed",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "scoreDecrypted",
              type: "bool",
            },
            {
              internalType: "uint8",
              name: "decryptedScore",
              type: "uint8",
            },
            {
              internalType: "bool",
              name: "matchDecrypted",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "isMatch",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getMyMatches",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalUsers",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "hasProfile",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user1",
              type: "address",
            },
            {
              internalType: "address",
              name: "user2",
              type: "address",
            },
          ],
          name: "isAlreadyMatched",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "matchRequests",
          outputs: [
            {
              internalType: "address",
              name: "requester",
              type: "address",
            },
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
            {
              internalType: "euint8",
              name: "similarityScore",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "scoreDecrypted",
              type: "bool",
            },
            {
              internalType: "uint8",
              name: "decryptedScore",
              type: "uint8",
            },
            {
              internalType: "bool",
              name: "processed",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "ebool",
              name: "isMatchEncrypted",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "matchDecrypted",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "isMatch",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "processMatchDecryption",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "processScoreDecryption",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "profiles",
          outputs: [
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
            {
              internalType: "euint8",
              name: "interestsBitmap",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "profileCreatedAt",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "requestMatchDecryption",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "requestScoreDecryption",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "ctHash",
                  type: "uint256",
                },
                {
                  internalType: "uint8",
                  name: "securityZone",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "utype",
                  type: "uint8",
                },
                {
                  internalType: "bytes",
                  name: "signature",
                  type: "bytes",
                },
              ],
              internalType: "struct InEuint8",
              name: "encryptedInterests",
              type: "tuple",
            },
          ],
          name: "submitProfile",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    Multicall3: {
      address: "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      abi: [
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Call[]",
              name: "calls",
              type: "tuple[]",
            },
          ],
          name: "aggregate",
          outputs: [
            {
              internalType: "uint256",
              name: "blockNumber",
              type: "uint256",
            },
            {
              internalType: "bytes[]",
              name: "returnData",
              type: "bytes[]",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "bool",
                  name: "allowFailure",
                  type: "bool",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Call3[]",
              name: "calls",
              type: "tuple[]",
            },
          ],
          name: "aggregate3",
          outputs: [
            {
              components: [
                {
                  internalType: "bool",
                  name: "success",
                  type: "bool",
                },
                {
                  internalType: "bytes",
                  name: "returnData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Result[]",
              name: "returnData",
              type: "tuple[]",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "bool",
                  name: "allowFailure",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Call3Value[]",
              name: "calls",
              type: "tuple[]",
            },
          ],
          name: "aggregate3Value",
          outputs: [
            {
              components: [
                {
                  internalType: "bool",
                  name: "success",
                  type: "bool",
                },
                {
                  internalType: "bytes",
                  name: "returnData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Result[]",
              name: "returnData",
              type: "tuple[]",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Call[]",
              name: "calls",
              type: "tuple[]",
            },
          ],
          name: "blockAndAggregate",
          outputs: [
            {
              internalType: "uint256",
              name: "blockNumber",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "blockHash",
              type: "bytes32",
            },
            {
              components: [
                {
                  internalType: "bool",
                  name: "success",
                  type: "bool",
                },
                {
                  internalType: "bytes",
                  name: "returnData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Result[]",
              name: "returnData",
              type: "tuple[]",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "getBasefee",
          outputs: [
            {
              internalType: "uint256",
              name: "basefee",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "blockNumber",
              type: "uint256",
            },
          ],
          name: "getBlockHash",
          outputs: [
            {
              internalType: "bytes32",
              name: "blockHash",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getBlockNumber",
          outputs: [
            {
              internalType: "uint256",
              name: "blockNumber",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getChainId",
          outputs: [
            {
              internalType: "uint256",
              name: "chainid",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getCurrentBlockCoinbase",
          outputs: [
            {
              internalType: "address",
              name: "coinbase",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getCurrentBlockDifficulty",
          outputs: [
            {
              internalType: "uint256",
              name: "difficulty",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getCurrentBlockGasLimit",
          outputs: [
            {
              internalType: "uint256",
              name: "gaslimit",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getCurrentBlockTimestamp",
          outputs: [
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "addr",
              type: "address",
            },
          ],
          name: "getEthBalance",
          outputs: [
            {
              internalType: "uint256",
              name: "balance",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getLastBlockHash",
          outputs: [
            {
              internalType: "bytes32",
              name: "blockHash",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bool",
              name: "requireSuccess",
              type: "bool",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Call[]",
              name: "calls",
              type: "tuple[]",
            },
          ],
          name: "tryAggregate",
          outputs: [
            {
              components: [
                {
                  internalType: "bool",
                  name: "success",
                  type: "bool",
                },
                {
                  internalType: "bytes",
                  name: "returnData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Result[]",
              name: "returnData",
              type: "tuple[]",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bool",
              name: "requireSuccess",
              type: "bool",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Call[]",
              name: "calls",
              type: "tuple[]",
            },
          ],
          name: "tryBlockAndAggregate",
          outputs: [
            {
              internalType: "uint256",
              name: "blockNumber",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "blockHash",
              type: "bytes32",
            },
            {
              components: [
                {
                  internalType: "bool",
                  name: "success",
                  type: "bool",
                },
                {
                  internalType: "bytes",
                  name: "returnData",
                  type: "bytes",
                },
              ],
              internalType: "struct Multicall3.Result[]",
              name: "returnData",
              type: "tuple[]",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  421614: {
    BlindMatch: {
      address: "0x63Aa67277562f450f9EBF1027C4F7500F82a6cA4",
      abi: [
        {
          inputs: [
            {
              internalType: "uint8",
              name: "got",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "expected",
              type: "uint8",
            },
          ],
          name: "InvalidEncryptedInput",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "int32",
              name: "value",
              type: "int32",
            },
          ],
          name: "SecurityZoneOutOfBounds",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "isMatch",
              type: "bool",
            },
          ],
          name: "MatchDecrypted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "MatchDecryptionRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user1",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user2",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
          ],
          name: "MatchFound",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "requester",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "target",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "MatchRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
          ],
          name: "ProfileCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "uint8",
              name: "score",
              type: "uint8",
            },
          ],
          name: "ScoreDecrypted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "ScoreDecryptionRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user1",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user2",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "SimilarityCalculated",
          type: "event",
        },
        {
          inputs: [],
          name: "MATCH_THRESHOLD",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MIN_INTERESTS",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "TOTAL_INTERESTS",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "allUsers",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "targets",
              type: "address[]",
            },
          ],
          name: "batchCalculateSimilarity",
          outputs: [
            {
              internalType: "bytes32[]",
              name: "requestIds",
              type: "bytes32[]",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "targetUser",
              type: "address",
            },
          ],
          name: "calculateSimilarity",
          outputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "deleteProfile",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllUsers",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "getMatchCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "getMatchRequest",
          outputs: [
            {
              internalType: "address",
              name: "requester",
              type: "address",
            },
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
            {
              internalType: "bool",
              name: "processed",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "scoreDecrypted",
              type: "bool",
            },
            {
              internalType: "uint8",
              name: "decryptedScore",
              type: "uint8",
            },
            {
              internalType: "bool",
              name: "matchDecrypted",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "isMatch",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getMyMatches",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalUsers",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "hasProfile",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user1",
              type: "address",
            },
            {
              internalType: "address",
              name: "user2",
              type: "address",
            },
          ],
          name: "isAlreadyMatched",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "matchRequests",
          outputs: [
            {
              internalType: "address",
              name: "requester",
              type: "address",
            },
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
            {
              internalType: "euint8",
              name: "similarityScore",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "scoreDecrypted",
              type: "bool",
            },
            {
              internalType: "uint8",
              name: "decryptedScore",
              type: "uint8",
            },
            {
              internalType: "bool",
              name: "processed",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "ebool",
              name: "isMatchEncrypted",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "matchDecrypted",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "isMatch",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "processMatchDecryption",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "processScoreDecryption",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "profiles",
          outputs: [
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
            {
              internalType: "euint8",
              name: "interestsBitmap",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "profileCreatedAt",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "requestMatchDecryption",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "requestScoreDecryption",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "ctHash",
                  type: "uint256",
                },
                {
                  internalType: "uint8",
                  name: "securityZone",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "utype",
                  type: "uint8",
                },
                {
                  internalType: "bytes",
                  name: "signature",
                  type: "bytes",
                },
              ],
              internalType: "struct InEuint8",
              name: "encryptedInterests",
              type: "tuple",
            },
          ],
          name: "submitProfile",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
